/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *firstHead = l1;
        ListNode *secondHead = l2;
        int lengthF = 0;
        int lengthS = 0;
        while (l1->next != nullptr){
            l1 = l1->next;
            lengthF++;
        }
        while (l2->next != nullptr){
            l2 = l2->next;
            lengthS++;
        }
        while (lengthF < lengthS){
            ListNode *newNode = new ListNode(0);
            l1->next = newNode;
            l1 = l1->next;
            lengthF++;
        }
        while (lengthS < lengthF){
            ListNode *newNode = new ListNode(0);
            l2->next = newNode;
            l2 = l2->next;
            lengthS++;
        }
        l1 = firstHead;
        l2 = secondHead;
        int sum = l1->val + l2->val;
        int sur = sum/10;
        int get = sum%10;
        ListNode *result = new ListNode(get);
        ListNode *resultHead = result;
        for (int i = 0; i < lengthF; i++){
            l1 = l1->next;
            l2 = l2->next;
            sum = l1->val + l2->val + sur;
            sur = sum/10;
            get = sum%10;
            ListNode *newNode = new ListNode(get);
            result->next = newNode;
            result = result->next;
        }
        if (sur == 1){
            ListNode *newNode = new ListNode(1);
            result->next = newNode;
        }
        return resultHead;
    }
};
